name: Scrape PS4 Games

permissions:
  contents: write

on:
  # Ejecutar automáticamente 2 veces al día
  schedule:
    - cron: '0 6,18 * * *'  # 6:00 AM y 6:00 PM UTC diariamente

  # Permitir ejecución manual
  workflow_dispatch:
    inputs:
      force_update:
        description: 'Force update even if no changes'
        required: false
        default: 'false'
        type: boolean

jobs:
  scrape-games:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Run PS4 games scraper
      run: |
        python ps4_scraper.py ps4_games_list.json

    - name: Check if file was created
      run: |
        if [ ! -f "ps4_games_list.json" ]; then
          echo "❌ Error: ps4_games_list.json was not created"
          exit 1
        fi

        # Show file stats
        echo "📊 File created successfully:"
        ls -lh ps4_games_list.json

        # Show game count
        GAME_COUNT=$(python -c "import json; data=json.load(open('ps4_games_list.json')); print(data['total_games'])")
        echo "🎮 Total games found: $GAME_COUNT"

        # Validate minimum game count
        if [ "$GAME_COUNT" -lt 1200 ]; then
          echo "⚠️  Warning: Only $GAME_COUNT games found (expected at least 1200)"
        fi

    - name: Check for changes
      id: changes
      run: |
        if git diff --quiet ps4_games_list.json; then
          echo "No changes detected in ps4_games_list.json"
          echo "changed=false" >> $GITHUB_OUTPUT
        else
          echo "Changes detected in ps4_games_list.json"
          echo "changed=true" >> $GITHUB_OUTPUT
        fi

    - name: Commit and push changes
      if: steps.changes.outputs.changed == 'true' || github.event.inputs.force_update == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        # Add the updated file
        git add ps4_games_list.json

        # Get current date and game count for commit message
        CURRENT_DATE=$(date '+%Y-%m-%d %H:%M:%S UTC')
        GAME_COUNT=$(python -c "import json; data=json.load(open('ps4_games_list.json')); print(data['total_games'])")

        # Commit with informative message
        git commit -m "🎮 Update PS4 games list - $GAME_COUNT games ($CURRENT_DATE)

        📊 Stats:
        • Total games: $GAME_COUNT
        • Extraction method: Sitemap XML parsing + URL filtering
        • Source: superpsx.com
        • Updated: $CURRENT_DATE

        🤖 Auto-generated by GitHub Actions"

        # Push changes
        git push

    - name: Create release on major updates
      if: steps.changes.outputs.changed == 'true'
      run: |
        GAME_COUNT=$(python -c "import json; data=json.load(open('ps4_games_list.json')); print(data['total_games'])")
        CURRENT_DATE=$(date '+%Y-%m-%d')

        # Check if this is a significant update (more than 50 new games)
        if git show HEAD~1:ps4_games_list.json 2>/dev/null; then
          PREV_COUNT=$(git show HEAD~1:ps4_games_list.json | python -c "import json, sys; data=json.load(sys.stdin); print(data['total_games'])" 2>/dev/null || echo "0")
          DIFF=$((GAME_COUNT - PREV_COUNT))

          if [ "$DIFF" -gt 50 ]; then
            echo "📈 Significant update detected: +$DIFF games"

            # Create a release tag
            TAG_NAME="v$CURRENT_DATE"

            # Create and push tag
            git tag -a "$TAG_NAME" -m "PS4 Games List Update - $GAME_COUNT games (+$DIFF new games)"
            git push origin "$TAG_NAME"

            echo "🏷️  Created release tag: $TAG_NAME"
          fi
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ps4-games-list
        path: ps4_games_list.json
        retention-days: 30

    - name: Summary
      run: |
        echo "## 🎮 PS4 Games Scraping Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        GAME_COUNT=$(python -c "import json; data=json.load(open('ps4_games_list.json')); print(data['total_games'])")
        TIMESTAMP=$(python -c "import json; data=json.load(open('ps4_games_list.json')); print(data['timestamp'])")

        echo "📊 **Statistics:**" >> $GITHUB_STEP_SUMMARY
        echo "- Total games found: **$GAME_COUNT**" >> $GITHUB_STEP_SUMMARY
        echo "- Last updated: **$TIMESTAMP**" >> $GITHUB_STEP_SUMMARY
        echo "- Extraction method: **Sitemap XML parsing + URL filtering**" >> $GITHUB_STEP_SUMMARY
        echo "- Source: **superpsx.com**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        if [ "${{ steps.changes.outputs.changed }}" == "true" ]; then
          echo "✅ **Status:** Changes detected and committed" >> $GITHUB_STEP_SUMMARY
        else
          echo "ℹ️ **Status:** No changes detected" >> $GITHUB_STEP_SUMMARY
        fi

        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🔗 **Links:**" >> $GITHUB_STEP_SUMMARY
        echo "- [Download JSON file](https://github.com/${{ github.repository }}/blob/main/ps4_games_list.json)" >> $GITHUB_STEP_SUMMARY
        echo "- [View raw JSON](https://raw.githubusercontent.com/${{ github.repository }}/main/ps4_games_list.json)" >> $GITHUB_STEP_SUMMARY
